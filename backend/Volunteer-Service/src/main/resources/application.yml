server:
  port: 0

spring:
  application:
    name: volunteer-service
  datasource:
    url: jdbc:mysql://localhost:3306/emergency
    username: root
    password: pass@word1
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
#  default-filters:
#    # This filter removes duplicate CORS headers if present
#    - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
#    # Global CORS configuration
#    - globalcors:
#        corsConfigurations:
#          '[/**]': # Apply CORS to all routes
#            allowedOrigins:
#              - "http://localhost:3000"
#              - "http://127.0.0.1:3001"  # Allowed origins, separated for clarity
#            allowedHeaders: "*"  # Allow all headers
#            allowedMethods: # Allowed HTTP methods
#              - GET
#              - POST
#              - DELETE
#              - PUT
#              - OPTIONS
#            allowCredentials: true  # If using cookies for authentication


#
#spring:
#  application:
#    name: volunteer-service
#  config:
#    import:
#      optional: configserver:http://localhost:8887


  kafka:
    bootstrap-servers: localhost:9092
    producer:
      properties:
        spring.json.type.mapping: event:com.ust.Incident_Management_System.Model.IncidentReport
    consumer:
      group-id: notification-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.add.type.headers: true

eureka:
  client:
    registerWithEureka: true        # Registers this service with the Eureka server
    fetchRegistry: true             # Fetches the registry from the Eureka server
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/  # URL of the Eureka server to connect with
  instance:
    hostname: localhost             # The hostname of the instance
    instance-id: "${spring.application.name}:${instanceId:${random.value}}"  # Instance ID, with dynamic values